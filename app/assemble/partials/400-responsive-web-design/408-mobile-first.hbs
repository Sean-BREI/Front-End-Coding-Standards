---
title: "Mobile First"
section: true
weight: 508 # increase or decrease to change order of sections
options:
- end-with-rule: false # true
- level: 3 # 2, 3, 4, 5
published: true
---
{{#markdown}}
The "Mobile First" techniques consider the lowest common denominator first, which is likely to be your mobile devices due to bandwidth limitations, loading times (not just screen size!), and even CPU speed of the devices.

Key considerations and techniques include:

* Starting small, and work upwards. Use min-width, not max-width breakpoint definitions).
* Begin with global content styles that apply across all breakpoints.
* Next, add the styles that are seen below the smallest break point -- remember that using the min-width approach means that the "first breakpoint" will not be for small screens (like mobile size screens) but rather for larger ones (like mobile landscape or phablet size screens).
* From here add additional styles at successive breakpoints using min-width media queries leveraging the CSS cascade to progressively add additional styles.
* As the queries increase in minimum sizes, add the markup and styles necessary to lay components out differently on larger screens.
* Examine site features for mobile-specific JavaScript events (e.g. touch, pointer, vs. mouse) and interactions (e.g. swipe).

Generally speaking smaller screen designs are a bit less complex (fewer images, effects, etc). Thus as the screens get larger the complexity tends to increase, conveniently lending to an additive approach to styling, very much in line with a mobile first pattern.

An example of working upwards in a CSS file might be:
{{/markdown}}
{{#code "css"}}
/* GENERAL STYLES */
.example {...}

/* SECTION SPECIFIC STYLES - aimed at the smallest devices*/
.hero {...}

@media(min-width: 600px) {
  .hero {
    /* just the new stuff here, no need to be repetitive... */
  }
}

@media(min-width: 800px) {
  .hero {
    /* just the new stuff here, no need to be repetitive... */   
  }
}

@media(min-width: 1400px) {
  .hero {
    /* might need larger font sizes at largest screen sizes */
  }
}
{{/code}}
{{#markdown}}
Note: the breakpoints specified above are not intended to be recommended breakpoints, but rather just illustrative of this general concept.

Another way of thinking about a mobile first pattern (from a design and development standpoint) is to:

* Innovate for your smallest reasonable target device.
* Then start "sizing your window up" until the user experience or the design degrades.
* Add in a breakpoint and make some design modifications to fix the degradation.
* Resume sizing up your view port until you reach a similar breakdown in design and repeat this exercise.

Recurse on this until you reach your largest reasonable target device - this is the mobile first pattern.
{{/markdown}}
