---
title: "State"
section: true
weight: 324 # increase or decrease to change order of sections
options:
- end-with-rule: false # true
- level: 4 # 2, 3, 4, 5
published: true
---
{{#markdown}}
A state for an element or component is presentation information for a given component. This may be a dynamic state set by JavaScript or a user interaction, but not always. It could also be a preset from the server or the results after a transaction. State modifiers are a great way for a distinct class to be provided to engineers unfamiliar with the design, to give them hooks for various behavior. This is slightly different than JS specific classes, however.

State rules will use the `is-` prefix.
{{/markdown}}
{{#code "css"}}
.component-group.is-full { ... }
.component-group.is-expired { ... }
{{/code}}
{{#markdown}}
Treating components' state as a modifier that is boolean (i.e. true or false) also:

* Semantically helps provide information about the content.
* Separates the code for state from default presentation.
* Removes the need to update corresponding states or components if the name of either changes.

This last point is important from a maintenance perspective.

It's best to try to restrict these state indicators as being restricted to a specific component.
{{/markdown}}
