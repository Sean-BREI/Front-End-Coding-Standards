---
title: "Formatting SCSS"
section: true
weight: '2.9' # increase or decrease to change order of sections
options:
- end-with-rule: false # true
- level: 3 # 2, 3, 4, 5
published: true
---
{{#markdown}}
Basic rules for formatting SCSS files:

* The ordering of styles should be:
    1. `@extend`
    2. `@includes` (without inner content)
    3. Regular styles
    4. `@includes` (with inner content)
    5. Nested rule sets
* Nested rule sets should follow the same ordering of styles.
* Foundation breakpoints should be placed inside the selector they directly affect, and should not contain nested styles.
* Nesting shouldn't go deeper than 4 levels.
* Nested statements shouldn't be longer than 50 lines.
    * This means that each nested selector shouldn't total 50 lines, not that the entire file should be under 50 lines. This is so that a nested selector can fit into your editor window to reduce confusion during development.
* Only use variables or functions for colors in a module/partial.
    * Try to use specifically named variables instead of the raw color names. For example, `$header-outer-border-color` instead of `$congress-blue;`.
	* The palette helper is also recommended to assist with naming.
* Surround all pixel values in `rem-calc()`.
    * Exceptions are permitted where rem units are not supported or cause issues (like borders).

Inside sets of rules or style declarations:
* Omit an empty line between the top and bottom of a nested block.
* Add empty lines in between nested blocks.
{{/markdown}}
{{#code "scss"}}
$palettes: map-merge($palettes, (
    'accordion': (
        'core': $black,
        'background': $iron,
		'title': $midnight-blue,
		'hover': $mango-tango,
		'border': $mango-tango
    )
));

// Example, normally this would be in theme-variables.scss
$default-font: 'Lato', Arial, sans-serif;

.accordion-item {
	@extend %list-reset;

	border-top: 1px dotted $dodger-blue;

	&:first-child {
		border-top: 1px dotted palette('accordion', 'border');
	}

	.accordion-title {
		color: palette('accordion', 'title');
		display: block;
		font-size: rem-calc(24);
		line-height: rem-calc(28);
		position: relative;
		padding: rem-calc(15 20 15 28);

		@include breakpoint(large) {
			font-size: rem-calc(30);
			line-height: rem-calc(34);
			padding: rem-calc(17 20 17 42);
		}

		.no-js & {
			padding-left: 0;
		}

		&:hover,
		&:focus {
			text-decoration: none;
		}
	}

	.accordion-content {
		background-color: palette('accordion', 'background');
		display: none;
		padding: rem-calc(25 25 25 0);

		.no-js & {
			display: block;
		}
	}
}
{{/code}}
