---
title: "JavaScript Deliverables"
section: true
weight: '3.20' # increase or decrease to change order of sections
options:
- end-with-rule: false # true
- level: 2 # 2, 3, 4, 5
published: true
---
{{#markdown}}
The most obvious fact is you will need to provide working files that are error-free and will work in a variety of scenarios. We can't assume that clients will always leave scripts and pages as we leave them, though we can provide direction as to how scripts should be used.

#### Understanding the Code's Place in the Project

* Understand where your code will live vs. any code introduced in a destination environment
* Understand if the code will need to coexist with other code.

#### Clean, Clear, Organized, Readable Code

* As bug free as possible.
* Always remember we write code for other developers, not for a runtime or a browser.
* Remove code that is no longer used. Remove excess "noise" or distractions from source code such as large commented out blocks of unused code. Source control can solve problems like this.
* Have console and debugging statements be removed or a plan in place for suppression during the build or deployment.

**Learn more:**

[The Essentials of Writing High Quality JavaScript](http://code.tutsplus.com/tutorials/the-essentials-of-writing-high-quality-javascript--net-15145) is an older article but still holds up today.

Delivery of a flat folder full of JavaScript files is not advised.
{{/markdown}}
{{#code "bash"}}

# Do not deliver the following

├── web/
│   ├── js/
│   │   ├── main.js
│   │   ├── home.js
│   │   ├── ...
│   │   ├── vendor
│   │   │   ├── source01.js
│   │   │   ├── source02.js
│   │   │   ├── ...
│   │   ├── modules
│   │   │   ├── module01.js
│   │   │   ├── module02.js
│   │   │   ├── ...
{{/code}}
