---
title: "About JavaScript Modules"
section: true
weight: 419 # increase or decrease to change order of sections
options:
- end-with-rule: false # true
- level: 4 # 2, 3, 4, 5
published: true
---
{{#markdown}}
The term "module" in JavaScript has probably been over-used. It can refer to specific patterns used by specific tools and frameworks, or simple blocks of code following some typical [JavaScript design patterns](http://www.slideshare.net/stoyan/javascript-patterns).

These days options for JavaScript modules include some of the following.

**Vanilla JavaScript:**

* [Object literal notation](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#modulepatternjavascript)
* The [Revealing Module Pattern](http://addyosmani.com/resources/essentialjsdesignpatterns/book/#modulepatternjavascript)

Or, a **common standard**, used by many dependency tools:

* [AMD modules](http://requirejs.org/docs/whyamd.html) (most commonly used by require.js)
* CommonJS modules (most common used by node.js and browserify)
* [ES6 modules](https://leanpub.com/understandinges6/read/#leanpub-auto-modules)

**Frameworks** will have their own unique set ups.

**Learn more:**

ES6 has just recently standardized how script loading, importing, and more about how modules [will be handled](https://leanpub.com/understandinges6/read/#leanpub-auto-modules) as part of the standard spec going forward.
{{/markdown}}
